*/问题描述： 
设有n件工作分配给n个人。为第i个人分配工作j所需的费用为c[i][j] 。试设计一个算法，计算最佳工作分配方案，为每一个人都分配1 件不同的工作，并使总费用达到最小。 
数据输入 ：
第一行一个正整数n(1<=n<=20),接下来的n 行，每行n 个数，表示工作费用 。
结果输出:
输出有m行，每行输出最小总费用。
输入样例：
5
50 43 1 58 60 
87 22 5 62 71 
62 98 97 27 38 
56 57 96 73 71 
92 36 43 27 95
输出样例：
144
*/
#include<iostream>
void Backtrack(int i);
void Swap(int &a, int &b);
using namespace std;

int n;  
int a[21][21];  
int x[21];
int best = INT_MAX	, now = 0;

int main()
{
	
	cin >> n;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			cin >> a[i][j];
	for (int i = 1; i <=n; i++)
		x[i] = i;
	Backtrack(1);
	cout << best<<endl;
	return 0;
}

void Backtrack(int i)
{
	if (i > n)
	{
		if (now<best)
			best = now;
	}
	else
	{
		for (int j = i; j <= n; j++)
		{
			now += a[i][x[j]];
			if (now<best)
			{
				Swap(x[i], x[j]);
				Backtrack(i + 1);
				Swap(x[i], x[j]);
			}
			now -= a[i][x[j]];
		}
	}
}


void Swap(int &a, int &b)
{
	int temp=a;
	a = b;
	b = temp;	
}
