/*描述
设有 n 个顾客同时等待一项服务。顾客 i 需要的服务时间为t i ， 1 ≤i ≤n 。应如何安排 n 个顾客的服务次序才能使平均等待时间达到最小 ? 平均等待时间是 n 个顾客等待服务时间的总和除以 n 。
对于给定的 n 个顾客需要的服务时间，编程计算最优服务次序。

输入
第一行是正整数 n ，表示有 n 个顾客。接下来的 1 行中，有 n 个正整数，表示 n 个顾客需要的服务时间。

输出
将编程计算出的最小平均等待时间输出。
*/

#include<iostream>
using namespace std;

int main()
{
	int n;
	cin >> n;
	int a[100] = { 0 };
	for (int i = 1; i <=n; i++)
		cin >> a[i];
	QuickSort(a, 1, n );    //快排算法就不贴上来了，以前的程序里有
	double sum=0;
	for (int i = 1; i <= n; i++)
		sum +=(n+1-i)*a[i];
	cout << sum / n<<endl;
	return 0;
}

