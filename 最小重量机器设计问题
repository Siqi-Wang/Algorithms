*/设某一机器由n个部件组成，每一种部件都可以从m个不同的供应商处购得。设 wij 是从供应商j 处购得的部件i的重量，cij 是相应的价格。
试设计一个回溯算法，给出总价格不超过d的最小重量机器设计。
对于给定的机器部件重量和机器部件价格，计算总价格不超过d的最小重量机器设计。
*/
#include<iostream>
void Backtrack(int i);
using namespace std;

int n,m,d;  
int c[21][21],w[21][21];  
int x[21],bestx[21];
int best = INT_MAX	, nowc= 0, noww=0;

int main()
{
	
	cin >> n>>m>>d;
	for (int i = 1; i <=n; i++)
		for (int j = 1; j <= m; j++)
			cin >> c[i][j];
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			cin >> w[i][j];
	for (int i = 1; i <= n; i++)
		x[i] = 0;
	Backtrack(1);
	cout << best<<endl;
	for (int i = 1; i <= n; i++)
			cout << bestx[i]<<"  ";
	return 0;
}

void Backtrack(int i)
{
	if (i > n)
	{
		if (noww < best)
		{
			for (int j = 1; j <= n; j++)
				bestx[j] = x[j];
			best = noww;
		}
	}

	for (int j = 1; j <= n; j++)
	{
		if (nowc< d && noww<best)
		{
			x[i] = j;
			nowc += c[i][j];
			noww += w[i][j];
			Backtrack(i + 1);
			x[i] = 0;
			nowc -= c[i][j];
			noww -= w[i][j];
		}
	}
}

